{% extends "::baseAdmin.html.twig" %}

{% block body_admin %}
    <h2>Article {{ entity.title }} Edition</h2>

    <div class="clear"></div> <!-- End .clear -->
    <div class="content-box"><!-- Start Content Box -->
        <div class="content-box-header">

            <div class="clear"></div>

        </div> <!-- End .content-box-header -->

        <div class="content-box-content">
            {% for flashMessage in app.session.flashbag.get('success') %}
                <div class="notification success png_bg">
                    <div>{{ flashMessage }}</div>
                </div>
            {% endfor %}

            {% for flashMessage in app.session.flashbag.get('error') %}
                <div class="notification error png_bg">
                    <div>{{ flashMessage }}</div>
                </div>
            {% endfor %}

            <form action="{{ path('article_admin_update', { 'id': entity.id }) }}" method="post" {{ form_enctype(edit_form) }} novalidate>
                <div id="john_adminbundle_articletype">
                    <p>
                        {{ form_label(edit_form.category, 'Catégorie') }}             
                        {{ form_widget(edit_form.category, { 'attr': {'class': 'small-input'} }) }}  {% if form_errors(edit_form.category) %} <span class="input-notification error png_bg">{{ form_errors(edit_form.category) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.subCategory, 'Sous catégorie') }}             
                        {{ form_widget(edit_form.subCategory, { 'attr': {'class': 'small-input'} }) }}  {% if form_errors(edit_form.subCategory) %} <span class="input-notification error png_bg">{{ form_errors(edit_form.subCategory) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.title, 'Titre') }}
                        {{ form_widget(edit_form.title, { 'attr': {'class': 'text-input medium-input'} })  }} {% if form_errors(edit_form.title) %}<span class="input-notification error png_bg">{{ form_errors(edit_form.title) }}</span> {% endif %}
                    </p>
                    
                    <p>
                        {{ form_label(edit_form.metaTitle, 'MetaTitre') }}
                        {{ form_widget(edit_form.metaTitle, { 'attr': {'class': 'text-input large-input'} })  }} {% if form_errors(edit_form.metaTitle) %}<span class="input-notification error png_bg">{{ form_errors(edit_form.metaTitle) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.metaDescription, 'MetaDescription') }}
                        {{ form_widget(edit_form.metaDescription, { 'attr': {'class': 'text-input large-input'} })  }} {% if form_errors(edit_form.metaDescription) %}<span class="input-notification error png_bg">{{ form_errors(edit_form.metaDescription) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.chapo, 'Chapô') }}
                        {{ form_widget(edit_form.chapo) }}

                        {% if form_errors(edit_form.chapo) %} <br/> <span class="input-notification error png_bg">{{ form_errors(edit_form.chapo) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.body, 'Corps du texte') }}
                        {{ form_widget(edit_form.body) }}

                        {% if form_errors(edit_form.body) %} <br/> <span class="input-notification error png_bg">{{ form_errors(edit_form.body) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.isPicture, 'Y a-t-il une image principale?') }}
                        {{ form_widget(edit_form.isPicture) }} {% if form_errors(edit_form.isPicture) %}<span class="input-notification error png_bg">{{ form_errors(edit_form.isPicture) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.file, 'Image') }}
                        {% if entity.picture is defined and entity.picture is not null %}
                            {% set filter_picture_size = 'thumbnail_category' %}
                        <p><img class="article-img" alt="{{entity.picture}}" src="{{ asset(['uploads/', entity.picture] | join | apply_filter(filter_picture_size)) }}"></p>
                        {% endif %}
                        {{ form_widget(edit_form.file) }}  {% if form_errors(edit_form.file) %} <span class="input-notification error png_bg">{{ form_errors(edit_form.file) }}</span> {% endif %}
                    </p>

                    <p>
                        {{ form_label(edit_form.isVisible, 'Visible sur le site ?') }}
                        (Etat Actuel: {% if entity.isVisible %}OUI{% else %}NON{% endif %})<br/>
                        {{ form_widget(edit_form.isVisible) }} {% if form_errors(edit_form.isVisible) %}<span class="input-notification error png_bg">{{ form_errors(edit_form.isVisible) }}</span> {% endif %}
                    </p>
                    
                    <p>{{ form_widget(edit_form.tags) }}</p>
                </div>

                {{ form_rest(edit_form) }}
                <p>
                    <button class="button" type="submit">Mettre à jour</button>
                </p>
            </form>
        </div> <!-- End .content-box-content -->
    </div> <!-- End .content-box -->

    {{ elfinder_tinymce_init4() }}
    {{ tinymce_init() }}
    
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    
    {% if tags is defined %}
        {% set availableTags = tags %}
    {% else %}
        {% set availableTags = 'null' %}
    {% endif %}
    
    <script type="text/javascript">
        $(document).ready(function() {
            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var container = $('div#john_adminbundle_articletype_tags');

            // On ajoute un lien pour ajouter une nouvelle catégorie
            var addLink = $('<a href="#" id="ajout_tag" class="btn">Ajouter un tag à l\'article</a>');
            container.append(addLink);

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            addLink.click(function(e) {
                addTag(container);
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = container.find(':input').length;

            // On ajoute un premier champ directement s'il n'en existe pas déjà un (cas d'un nouvel article par exemple).
            if (index == 0) {
                addTag(container);
            } else {
                // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
                container.children('div').each(function() {
                    addRemoveLink($(this));
                });
            }

            // La fonction qui ajoute un formulaire Categorie
            function addTag($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var prototype = $(container.attr('data-prototype').replace(/__name__label__/g, 'Tag n°' + (index + 1))
                        .replace(/__name__/g, index));

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                addRemoveLink(prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                container.append(prototype);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression d'une catégorie
            function addRemoveLink(prototype) {
                // Création du lien
                var suppressionLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

                // Ajout du lien
                prototype.append(suppressionLink);

                // Ajout du listener sur le clic du lien
                suppressionLink.click(function(e) {
                    prototype.remove();
                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }
            
            if ('null' != '{{ availableTags | raw}}'){
                var autocompleteTags = {{ availableTags | raw }};

                $('.autocomplete-tag').autocomplete({
                    source: autocompleteTags
                });
            }
        });
    </script>
</script>
    
    
    
{% endblock %}